{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","setData","useEffect","then","imgs","setTimeout","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,MAAI,CAACP,MAEtBC,EAAc,MAOlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SArBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,aA2B/BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,kCCrCrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAKlC,OACI,sBAAKc,UAAU,8CAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEdlB,mBACxB,CAACyB,KAAK,GACNa,SAAS,IAJ6B,mBAE/Bb,EAF+B,KAEzBc,EAFyB,KAoBtC,OAbAC,qBAAW,WACPvB,EAASC,GACJuB,MAAK,SAAAC,GACNC,YAAY,WACRJ,EAAQ,CACJd,KAAOiB,EACPJ,SAAU,MAEhB,UAGP,CAAEpB,IAEEO,EDhBwBmB,CAAa1B,GAA/Ba,EAFsB,EAE5BN,KAAaa,EAFe,EAEfA,QAKpB,OAHAO,QAAQC,IAAIR,GAIZ,qCACI,mCAAOpB,EAAP,OAECoB,GAAW,mBAAGJ,UAAU,oCAAb,qBAEhB,qBAAKA,UAAW,YAAhB,SAEgBH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADEA,EAAIC,aElBrBkB,EAAe,WAAO,IAAD,EAEM/C,mBAAS,IAFf,mBAEvBgD,EAFuB,KAEXjD,EAFW,KAK9B,OACI,gCACI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQiD,EAAWrB,KAAK,SAACT,GAAD,OACf,cAAC,EAAD,CAEAA,SAAUA,GADJA,Y,MCd3B+B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5c5e295c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 1){\r\n            setCategories(cat => [inputValue]);\r\n            //setCategories(cat => [inputValue,...cat]);\r\n            setInputValue('');\r\n        }\r\n        // console.log('Submit Realizado');\r\n    }\r\n    \r\n    return (\r\n        \r\n        <form onSubmit= {handleSubmit}>\r\n            <input \r\n                type = \"text\" \r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=c7pZpqhxIoE0tg2h5qaNQRVle5f9eCuZ`;\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map ( img => {\r\n        return{\r\n            id: img.id,\r\n            title : img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    //setImages( gifs );\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n   // console.log(id,title,url);\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown \">\r\n            <img src= {url} alt= {title}/>\r\n            <p>{title}</p>\r\n            {/* {img.title} */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images,loading} = useFetchGifs(category);\r\n\r\n    console.log(loading);\r\n\r\n\r\n    return (\r\n    <>\r\n        <h3> { category } </h3>\r\n        \r\n        {loading && <p className=\" animate__animated animate__flash\">Loading</p>}\r\n\r\n    <div className= \"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                        key= {img.id}\r\n                        {...img }\r\n                        />\r\n                    ))\r\n                } \r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [data, setData] = useState(\r\n    {data:[],\r\n    loading: true\r\n    });\r\n\r\n    useEffect( () => {;\r\n        getGifs( category )\r\n            .then(imgs => {\r\n            setTimeout( () => {\r\n                setData({\r\n                    data : imgs,\r\n                    loading : false\r\n                });\r\n            },1000);\r\n        })\r\n        \r\n    }, [ category ] )\r\n\r\n    return data; //{data: [], loading: true}\r\n}\r\n","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            \r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                { \r\n                    categories.map( (category) => \r\n                     <GifGrid \r\n                     key= {category}\r\n                     category={category} \r\n                     />\r\n                    )\r\n                 }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n//GifExpertApp\n//<h2>GifExpertApp</h2>\n//<hr />"],"sourceRoot":""}